{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\issues-master\\\\src\\\\components\\\\todo-list\\\\todoList.js\";\nimport React, { Component } from \"react\";\nimport './todo-list.css';\nimport GitHubApiService from \"../../services/GitHubApi-services\";\nimport Tally from \"../tally/tally\";\nimport Status from \"../status/Status\";\nimport NotificationComments from \"../notificationComments/NotificationComments\";\nimport NotificationPull from \"../notificationPull/NotificationPull\";\nimport RelativeTime from \"../relativeTime/RelativeTime\";\nexport default class TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.gitHubApi = new GitHubApiService();\n    this.state = {\n      issuesList: []\n    };\n  }\n\n  componentDidMount() {\n    this.gitHubApi.getAllIssues().then(issuesList => {\n      this.setState({\n        issuesList: issuesList\n      });\n    });\n  }\n\n  renderIssuesItem(arr) {\n    if (arr === null) {\n      return arr.map(info => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"issues-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"section-icon-status\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Status, {\n          state: info.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"section-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"box-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: info.html_url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }\n        }, info.title)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"box-data\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }\n        }, info.number, \" opened\", /*#__PURE__*/React.createElement(\"relative-time\", {\n          datetime: info.updated_at,\n          className: \"no-wrap\",\n          title: \"15 \\u0430\\u043F\\u0440. 2020 \\u0433., 10:51 GMT+3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }\n        }, info.created_at), /*#__PURE__*/React.createElement(RelativeTime, {\n          time: 15,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }\n        }), \"by \", /*#__PURE__*/React.createElement(\"a\", {\n          href: info.user.html_url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }\n        }, info.user.login))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"section-notification justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(NotificationPull, {\n          link: info.pull_request,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(NotificationComments, {\n          comment: info.comments,\n          link: info.comments_url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }\n        })));\n      });\n    } else return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Bad\");\n  }\n\n  render() {\n    const {\n      issuesList\n    } = this.state;\n    const items = this.renderIssuesItem(issuesList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"issues-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, items, /*#__PURE__*/React.createElement(Tally, {\n      variant: 'question',\n      text: 'question',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tally, {\n      variant: 'fixed',\n      text: 'Fixed in Upcoming Release',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/Work/issues-master/src/components/todo-list/todoList.js"],"names":["React","Component","GitHubApiService","Tally","Status","NotificationComments","NotificationPull","RelativeTime","TodoList","gitHubApi","state","issuesList","componentDidMount","getAllIssues","then","setState","renderIssuesItem","arr","map","info","html_url","title","number","updated_at","created_at","user","login","pull_request","comments","comments_url","render","items"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport './todo-list.css';\r\nimport GitHubApiService from \"../../services/GitHubApi-services\";\r\nimport Tally from \"../tally/tally\";\r\nimport Status from \"../status/Status\";\r\nimport NotificationComments from \"../notificationComments/NotificationComments\";\r\nimport NotificationPull from \"../notificationPull/NotificationPull\";\r\nimport RelativeTime from \"../relativeTime/RelativeTime\";\r\n\r\nexport default class TodoList extends Component {\r\n    gitHubApi = new GitHubApiService();\r\n    state = {\r\n        issuesList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.gitHubApi\r\n            .getAllIssues()\r\n            .then((issuesList) => {\r\n                this.setState({\r\n                    issuesList: issuesList\r\n                })\r\n            })\r\n    }\r\n\r\n    renderIssuesItem(arr) {\r\n        if (arr === null){\r\n\r\n            return arr.map((info) => {\r\n                return (\r\n                    <div className=\"issues-box\">\r\n                        <div className=\"section-icon-status\">\r\n                            <Status state={info.state} />\r\n                        </div>\r\n                        <div className=\"section-content\">\r\n                            <div className=\"box-title\">\r\n                                <a href={info.html_url}>\r\n                                    {info.title}\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"box-data\">\r\n                                {info.number} opened\r\n\r\n                                <relative-time datetime={info.updated_at} className=\"no-wrap\"\r\n                                               title=\"15 апр. 2020 г., 10:51 GMT+3\">\r\n                                    {info.created_at}\r\n                                </relative-time>\r\n                                <RelativeTime time={15} />\r\n\r\n                                by <a href={info.user.html_url}>{info.user.login}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"section-notification justify-content-between\">\r\n                            <NotificationPull link={info.pull_request} />\r\n                            <NotificationComments comment={info.comments} link={info.comments_url} />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n        else return <span>Bad</span>\r\n    }\r\n\r\n    render() {\r\n        const {issuesList} = this.state\r\n        const items = this.renderIssuesItem(issuesList)\r\n        return (\r\n            <div className=\"issues-wrapper\">\r\n                {items}\r\n                <Tally variant={'question'} text={'question'}/>\r\n                <Tally variant={'fixed'} text={'Fixed in Upcoming Release'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}