{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\issues-master\\\\src\\\\components\\\\todo-list\\\\todoList.js\";\nimport React, { Component } from \"react\";\nimport './todo-list.css';\nimport GitHubApiService from \"../../services/GitHubApi-services\";\nimport Tally from \"../tally/tally\";\nimport SvgIssueOpened from \"../SVG/SvgIssueOpened\";\nimport SvgComment from \"../SVG/SvgComment\";\nimport SvgPull from \"../SVG/SvgPull\";\nimport Status from \"../status/Status\";\nexport default class TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.gitHubApi = new GitHubApiService();\n    this.state = {\n      issuesList: []\n    };\n  }\n\n  componentDidMount() {\n    this.gitHubApi.getAllIssues().then(issuesList => {\n      this.setState({\n        issuesList: issuesList\n      });\n    });\n  }\n\n  renderIssuesItem(arr) {\n    return arr.map(info => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"issues-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section-icon-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: info.state + ' icon',\n        \"aria-label\": \"Open issue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Status, {\n        state: info.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"box-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: info.html_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, info.title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"box-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, info.number, \" opened\", /*#__PURE__*/React.createElement(\"relative-time\", {\n        datetime: info.created_at,\n        className: \"no-wrap\",\n        title: \"15 \\u0430\\u043F\\u0440. 2020 \\u0433., 10:51 GMT+3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, info.created_at), \"by \", info.user.login)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section-notification\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: info.comments_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(SvgComment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, \" \", info.comments))));\n    });\n  }\n\n  render() {\n    const {\n      issuesList\n    } = this.state;\n    const items = this.renderIssuesItem(issuesList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"issues-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, items, /*#__PURE__*/React.createElement(Tally, {\n      variant: 'question',\n      text: 'question',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tally, {\n      variant: 'fixed',\n      text: 'Fixed in Upcoming Release',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/Work/issues-master/src/components/todo-list/todoList.js"],"names":["React","Component","GitHubApiService","Tally","SvgIssueOpened","SvgComment","SvgPull","Status","TodoList","gitHubApi","state","issuesList","componentDidMount","getAllIssues","then","setState","renderIssuesItem","arr","map","info","html_url","title","number","created_at","user","login","comments_url","comments","render","items"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport './todo-list.css';\r\nimport GitHubApiService from \"../../services/GitHubApi-services\";\r\nimport Tally from \"../tally/tally\";\r\nimport SvgIssueOpened from \"../SVG/SvgIssueOpened\";\r\nimport SvgComment from \"../SVG/SvgComment\";\r\nimport SvgPull from \"../SVG/SvgPull\";\r\nimport Status from \"../status/Status\";\r\n\r\nexport default class TodoList extends Component {\r\n    gitHubApi = new GitHubApiService();\r\n    state = {\r\n        issuesList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.gitHubApi\r\n            .getAllIssues()\r\n            .then((issuesList) => {\r\n                this.setState({\r\n                    issuesList: issuesList\r\n                })\r\n            })\r\n    }\r\n\r\n    renderIssuesItem(arr) {\r\n        return arr.map((info) => {\r\n            return (\r\n                <div className=\"issues-box\">\r\n                    <div className=\"section-icon-status\">\r\n                        <span className={info.state + ' icon'} aria-label=\"Open issue\">\r\n                          <Status state={info.state} />\r\n                         </span>\r\n                    </div>\r\n                    <div className=\"section-content\">\r\n                        <div className=\"box-title\">\r\n                            <a href={info.html_url}>\r\n                                {info.title}\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"box-data\">\r\n                            {info.number} opened\r\n\r\n                            <relative-time datetime={info.created_at} className=\"no-wrap\"\r\n                                           title=\"15 апр. 2020 г., 10:51 GMT+3\">\r\n                                {info.created_at}\r\n                            </relative-time>\r\n\r\n                            by {info.user.login}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-notification\">\r\n                        <a href={info.comments_url}>\r\n                           <span>\r\n                                <SvgComment />\r\n                           </span>\r\n                            <span> {info.comments}</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {issuesList} = this.state\r\n        const items = this.renderIssuesItem(issuesList)\r\n        return (\r\n            <div className=\"issues-wrapper\">\r\n                {items}\r\n                <Tally variant={'question'} text={'question'}/>\r\n                <Tally variant={'fixed'} text={'Fixed in Upcoming Release'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}